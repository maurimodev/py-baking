# -*- coding: utf-8 -*-
import os
import string

import PyQt5
# Form implementation generated from reading ui file 'ui/WARE_EXPLORE.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import random
import resources
class Ui_MainWindow(object):

    def __init__(self):
        self.storedWare = None

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(725, 448)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.titleLabel = QtWidgets.QLabel(self.centralwidget)
        self.titleLabel.setGeometry(QtCore.QRect(40, 10, 371, 71))
        font = QtGui.QFont()
        font.setFamily("KiwiSoda")
        font.setPointSize(24)
        self.titleLabel.setFont(font)
        self.titleLabel.setAutoFillBackground(False)
        self.titleLabel.setScaledContents(False)
        self.titleLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.titleLabel.setWordWrap(True)
        self.titleLabel.setObjectName("titleLabel")
        self.exploreButton = QtWidgets.QPushButton(self.centralwidget)
        self.exploreButton.setGeometry(QtCore.QRect(150, 80, 151, 41))
        font = QtGui.QFont()
        font.setFamily("Minion Pro")
        font.setPointSize(11)
        self.exploreButton.setFont(font)
        self.exploreButton.setObjectName("exploreButton")
        self.wareList = QtWidgets.QListWidget(self.centralwidget)
        self.wareList.setGeometry(QtCore.QRect(90, 150, 256, 231))
        font = QtGui.QFont()
        font.setFamily("Minion Pro")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.wareList.setFont(font)
        self.wareList.setDefaultDropAction(QtCore.Qt.MoveAction)
        self.wareList.setAlternatingRowColors(True)
        self.wareList.setObjectName("wareList")
        self.frogPicture = QtWidgets.QLabel(self.centralwidget)
        self.frogPicture.setGeometry(QtCore.QRect(390, 80, 271, 261))
        self.frogPicture.setText("")
        self.frogPicture.setPixmap(QtGui.QPixmap(":/newPrefix/frog.png"))
        self.frogPicture.setScaledContents(True)
        self.frogPicture.setObjectName("frogPicture")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 725, 21))
        self.menubar.setObjectName("menubar")
        self.menuNew = QtWidgets.QMenu(self.menubar)
        self.menuNew.setObjectName("menuNew")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionCopy = QtWidgets.QAction(MainWindow)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtWidgets.QAction(MainWindow)
        self.actionPaste.setObjectName("actionPaste")
        self.actionDelete = QtWidgets.QAction(MainWindow)
        self.actionDelete.setObjectName("actionDelete")
        self.menuNew.addAction(self.actionNew)
        self.menuNew.addAction(self.actionSave)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addAction(self.actionDelete)
        self.menubar.addAction(self.menuNew.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.exploreButton.clicked.connect(self.createWare)
        self.actionNew.triggered.connect(lambda: self.resetWares())
        self.actionCopy.triggered.connect(self.copyWare)
        self.actionPaste.triggered.connect(self.pasteWare)
        self.actionSave.triggered.connect(self.saveWares)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.titleLabel.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:28pt; font-weight:600; font-style:italic;\">HELLO, TRAVELER.</span></p></body></html>"))
        self.exploreButton.setText(_translate("MainWindow", "Explore my wares."))
        self.menuNew.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionNew.setStatusTip(_translate("MainWindow", "Empty your bag and start over"))
        self.actionNew.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setStatusTip(_translate("MainWindow", "Save your wares someplace safe"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        self.actionCopy.setStatusTip(_translate("MainWindow", "Internalize an item in your head..."))
        self.actionCopy.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionPaste.setText(_translate("MainWindow", "Paste"))
        self.actionPaste.setStatusTip(_translate("MainWindow", "...to manifest it and rejoice in duplication."))
        self.actionPaste.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.actionDelete.setText(_translate("MainWindow", "Delete"))
        self.actionDelete.setStatusTip(_translate("MainWindow", "It must be removed."))
        self.actionDelete.setShortcut(_translate("MainWindow", "Del"))

    def createWare(self):
        # get an item from a random list of strings
        randomList = ["Mead", "Potion", "Potoe", "Bag", "Leather Scraps", "A Melody of Love", "Snake Eyes"]
        self.wareList.addItem(random.choice(randomList))

    def resetWares(self):
        self.wareList.clear()

    def copyWare(self):
        self.storedWare = self.wareList.selectedItems()[0]
        print("copied ware:" + self.storedWare.text())

    def pasteWare(self):
        assert self.storedWare.text() is not None

        print("stored ware:" + self.storedWare.text())
        self.wareList.addItem(self.storedWare.text())

    def saveWares(self):
        print("saving wares")
        fileName, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save Wares", os.getcwd(), "Text Files (*.txt)")
        print(fileName)

        if not fileName:
            print("No filename provided, cancel option.")
            return

        textFile = open(fileName, "w", encoding="utf-8")
        allItems = []

        for i in range(self.wareList.count()):
            allItems.append(self.wareList.item(i).text() + "\n")

        textFile.writelines(allItems)
        textFile.close()
    
    def removeWares(self):
        self.wareList.takeItem(self.wareList.index(self.storedWare.text()) + 1)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
